import { BookIdentifier } from "./BookIdentifier.js";
import { Canon } from "./Canon.js";
import { CanonData } from "./Canons.js";
import { EnglishBook } from "./EnglishBook.js";
import { LatinBook } from "./LatinBook.js";
import { UbsBook } from "./UbsBook.js";
import { VerseReferenceJson } from "./VerseReferenceJson.js";
export type VerseReferenceString = string;
export declare class VerseReference {
    ubs_book: UbsBook;
    chapter: number;
    verse: number;
    canon: Canon;
    constructor(ubs_book: UbsBook, chapter: number, verse: number, canon: Canon);
    equals(other: VerseReference): boolean;
    static canonFromBook(book: UbsBook): CanonData | undefined;
    get canonData(): CanonData;
    nextVerse(): VerseReference;
    previousVerse(): VerseReference;
    get latinBookName(): LatinBook;
    get xmlId(): string;
    get bookIdentifier(): BookIdentifier;
    validate(): VerseReference | undefined;
    toJson(): VerseReferenceJson;
    static fromJson(json: VerseReferenceJson): VerseReference | undefined;
    toString(): VerseReferenceString;
    static fromString(str: VerseReferenceString): VerseReference | undefined;
    static ubsBookToLatin(ubsBook: UbsBook): LatinBook;
    static ubsBookToEnglish(ubsBook: UbsBook): EnglishBook;
}
