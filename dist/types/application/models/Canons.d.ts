import { Canon } from "./Canon.js";
import { UbsBook } from "./UbsBook.js";
import { VerseReference } from "./VerseReference.js";
type CanonNumberLookup = Partial<Record<UbsBook, number>>;
type CanonNumberArrayLookup = Partial<Record<UbsBook, number[]>>;
export declare class CanonData {
    private _name;
    private _books;
    private _max_chapter;
    private _max_verse;
    constructor(name: Canon, books: UbsBook[], max_chapter: CanonNumberLookup, max_verse: CanonNumberArrayLookup);
    get name(): Canon;
    get books(): UbsBook[];
    hasBook(book: UbsBook): boolean;
    fallbackVerseReference(): VerseReference;
    nextBook(book: UbsBook): UbsBook;
    previousBook(book: UbsBook): UbsBook;
    lastChapter(book: UbsBook): number | undefined;
    lastVerse(book: UbsBook, chapter: number): number | undefined;
    nextVerse(reference: VerseReference): VerseReference;
    previousVerse(reference: VerseReference): VerseReference;
    getIsValid(canon: Canon, book: UbsBook, chapter: number, verse: number): boolean;
}
export declare const NT: CanonData;
export declare const OT: CanonData;
export declare const LXX: CanonData;
export declare function getCanon(canon: Canon): CanonData;
export declare const CANON_NAMES: Canon[];
export declare const CANONS: CanonData[];
export declare const ALL_BOOK_CODES: ("GEN" | "EXO" | "LEV" | "NUM" | "DEU" | "JOS" | "JDG" | "RUT" | "1SA" | "2SA" | "1KI" | "2KI" | "1CH" | "2CH" | "EZR" | "NEH" | "EST" | "JOB" | "PSA" | "PRO" | "ECC" | "SNG" | "ISA" | "JER" | "LAM" | "EZK" | "DAN" | "HOS" | "JOL" | "AMO" | "OBA" | "JON" | "MIC" | "NAM" | "HAB" | "ZEP" | "HAG" | "ZEC" | "MAL" | "MAT" | "MRK" | "LUK" | "JHN" | "ACT" | "ROM" | "1CO" | "2CO" | "GAL" | "EPH" | "PHP" | "COL" | "1TH" | "2TH" | "1TI" | "2TI" | "TIT" | "PHM" | "HEB" | "JAS" | "1PE" | "2PE" | "1JN" | "2JN" | "3JN" | "JUD" | "REV")[];
export declare function canonicalOrderSort(a: UbsBook, b: UbsBook): number;
export {};
