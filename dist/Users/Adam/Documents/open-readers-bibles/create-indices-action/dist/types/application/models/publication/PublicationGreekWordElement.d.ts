import { Annotation } from "../../models/Annotation";
import { NTPartOfSpeech, NTPerson, NTTense, NTVoice, NTMood, NTCase, NTNumber, NTGender, NTDegree } from "../../models/GreekWordRow";
import { PublicationRequest } from "../../models/PublicationRequest";
import { VerseReference } from "../../models/VerseReference";
import { BaseWordElement } from "./BaseWordElement";
import { PublicationFootnoteType } from "./PublicationFootnote";
import { PublicationGreekWordElementRow } from "./PublicationGreekWordElementRow";
import { PublicationPhrasalGloss } from "./PublicationPhrasalGloss";
import { PublicationWord } from "./PublicationWord";
import { PublicationWordElement } from "./PublicationWordElement";
export declare class PublicationGreekWordElement extends BaseWordElement implements PublicationWordElement {
    row: PublicationGreekWordElementRow;
    private static _substantive_parts_of_speech;
    static fromWordRow(obj: any, word: PublicationWord, request: PublicationRequest): PublicationWordElement;
    constructor(obj: PublicationGreekWordElementRow, word: PublicationWord, request: PublicationRequest);
    get plaintext(): string;
    get isVerb(): boolean;
    get isSubstantive(): boolean;
    get isInteroggative(): boolean;
    get ketivQereString(): string;
    get trailer(): string;
    getBelowFrequencyThreshold(ref: VerseReference): boolean;
    requiredFootnoteType(ref: VerseReference): PublicationFootnoteType;
    get gloss(): Annotation | null;
    getParsingString(ref: VerseReference): string;
    get terminatesWord(): boolean;
    get lemma(): string;
    get lexicalform(): string;
    get part_of_speech(): NTPartOfSpeech;
    get person(): NTPerson;
    get tense(): NTTense;
    get voice(): NTVoice;
    get mood(): NTMood;
    get grammatical_case(): NTCase;
    get grammatical_number(): NTNumber;
    get gender(): NTGender;
    get degree(): NTDegree;
    get phrasalGlosses(): PublicationPhrasalGloss[];
    get id(): number;
}
